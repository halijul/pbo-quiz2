/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package halijul.quiz2;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Haliza
 */
public class Transaksi extends javax.swing.JFrame {
    private int id = 0;
    private String code;
    private DefaultTableModel modelTbl;
    private modelCombobox modelCombo;
    private ArrayList<Barang> daftarBrg = new ArrayList<>();
    
    public Transaksi() {
        this.modelCombo = new modelCombobox();
        this.modelCombo.tambahBarang(new Barang("Kopi", 10000));
        this.modelCombo.tambahBarang(new Barang("Susu", 20000));
        this.modelCombo.tambahBarang(new Barang("Gula", 15000));
        
        modelTabel tableModel = new modelTabel(); 
        this.modelTbl = new DefaultTableModel(tableModel.getNamakolom(), 0);
        
        initComponents();
    }
    
    private boolean isEmpty() {
        return this.tabelData.getModel().getRowCount()<=0;
    }
    
    private void cekTabel() {
        if(isEmpty()) {
            this.tombolSave.setEnabled(false);
            this.tombolRemove.setEnabled(false);
        } else {
            this.tombolSave.setEnabled(true);
            this.tombolRemove.setEnabled(true);
        }
    }
    
    private String getCode() {
        this.id += 1;
        String tgl = new SimpleDateFormat("yyMMdd").format(new Date());
        this.code = String.format(tgl+"%02d", this.id);
        return this.code;
    }
    
     private Object[] tambahBelanja(String nama, int jumlah) {
        float harga = 0;
        Barang[] brg = this.modelCombo.getBarang();
        for(int i = 0; i < brg.length; i++) {
            if(nama.equalsIgnoreCase(brg[i].getNama())) {
                harga = brg[i].getHarga();
            }
        } 
        Object[] obj = {
          nama,
          harga,
          jumlah
        };
        return obj;
    }
     
    private boolean isDobel(String nama) {
        boolean result = false;
        ArrayList<String> brg = new ArrayList<>();
        for (int i = 0; i < modelTbl.getRowCount(); i++){
            brg.add(modelTbl.getValueAt(i, 0).toString());
        }
        for(String i : brg) {
            if(i.equals(nama)) {
                result = true;
            } 
        }
        return result;
    } 
    
    private void tambahJumlah(String nama, int tambah) {
        ArrayList<String> brg = new ArrayList<>();
        for (int i = 0; i < modelTbl.getRowCount(); i++){
            brg.add(modelTbl.getValueAt(i, 0).toString());
        }
        for(int i = 0; i < brg.size(); i++) {
            if(brg.get(i).equals(nama)) {
                int jumlah = new Integer(modelTbl.getValueAt(i, 2).toString());
                modelTbl.setValueAt(jumlah+tambah, i, 2);  
            } 
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboBrg = new JComboBox<Barang>(this.modelCombo.getBarang());
        textJumlah = new javax.swing.JTextField();
        textCode = new javax.swing.JTextField();
        tombolNew = new javax.swing.JButton();
        tombolRemove = new javax.swing.JButton();
        tombolAdd = new javax.swing.JButton();
        tombolCancel = new javax.swing.JButton();
        tombolSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelData.setModel(this.modelTbl);
        tabelData.setEnabled(false);
        jScrollPane1.setViewportView(tabelData);

        jLabel1.setText("Code");

        jLabel2.setText("Item");

        comboBrg.setEnabled(false);

        textJumlah.setEnabled(false);

        textCode.setEnabled(false);

        tombolNew.setText("New");
        tombolNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolNewActionPerformed(evt);
            }
        });

        tombolRemove.setText("Remove");
        tombolRemove.setEnabled(false);
        tombolRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolRemoveActionPerformed(evt);
            }
        });

        tombolAdd.setText("Add");
        tombolAdd.setEnabled(false);
        tombolAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolAddActionPerformed(evt);
            }
        });

        tombolCancel.setText("Cancel");
        tombolCancel.setEnabled(false);
        tombolCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolCancelActionPerformed(evt);
            }
        });

        tombolSave.setText("Save");
        tombolSave.setEnabled(false);
        tombolSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textCode, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tombolNew, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBrg, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tombolAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tombolSave, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tombolCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tombolRemove)))))
                .addGap(29, 29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tombolNew)
                    .addComponent(textCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tombolAdd)
                    .addComponent(comboBrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tombolRemove)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tombolCancel)
                    .addComponent(tombolSave))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tombolNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolNewActionPerformed
        this.textCode.setText(this.getCode());
        this.tombolNew.setEnabled(false);
        this.tombolSave.setEnabled(true);
        this.tombolCancel.setEnabled(true);
        this.tombolAdd.setEnabled(true);
        this.tombolRemove.setEnabled(true);
        this.textJumlah.setEnabled(true);
        this.textJumlah.setText("1");
        this.comboBrg.setEnabled(true);
        this.tabelData.setEnabled(true);
        this.cekTabel();
    }//GEN-LAST:event_tombolNewActionPerformed

    private void tombolCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolCancelActionPerformed
        this.textJumlah.setText("");
        this.textCode.setText("");
        this.tombolNew.setEnabled(true);
        this.tombolSave.setEnabled(false);
        this.tombolCancel.setEnabled(false);
        this.tombolAdd.setEnabled(false);
        this.tombolRemove.setEnabled(false);
        this.textJumlah.setEnabled(false);
        this.comboBrg.setEnabled(false);
        this.id -= 1;
        this.daftarBrg.clear();
        this.modelTbl.setRowCount(0);
    }//GEN-LAST:event_tombolCancelActionPerformed

    private void tombolAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolAddActionPerformed

        String nama = this.comboBrg.getSelectedItem().toString();
        int jumlah = new Integer(this.textJumlah.getText());
        if(isDobel(nama)) {
            tambahJumlah(nama, jumlah);
        } else {
            modelTbl.addRow(tambahBelanja(nama, jumlah));
        }
        this.cekTabel();
    }//GEN-LAST:event_tombolAddActionPerformed

    private void tombolRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolRemoveActionPerformed
         if(tabelData.getSelectedRow()<0) {
            String text = "Pilih barang yang akan dihapus !";
            JOptionPane.showMessageDialog(this, text, "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int count = tabelData.getSelectedRows().length;
            for(int i = 0; i < count; i++) {
                modelTbl.removeRow(tabelData.getSelectedRow());
            }
        }
        this.cekTabel();
    }//GEN-LAST:event_tombolRemoveActionPerformed

    private void tombolSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSaveActionPerformed
        try {
            for (int i = 0; i < modelTbl.getRowCount(); i++) {
                String name = modelTbl.getValueAt(i, 0).toString();
                float price = new Float(modelTbl.getValueAt(i, 1).toString());
                int qty = new Integer(modelTbl.getValueAt(i, 2).toString());
                this.daftarBrg.add(new Barang(name, price, qty));
            }
            Struk struk = new Struk(this.code, this.daftarBrg);
            StringBuilder str = new StringBuilder();
            str.append(struk.cetakStruk());
            JOptionPane.showMessageDialog(this, str, "Detil Transaksi", JOptionPane.INFORMATION_MESSAGE);
            
            this.textJumlah.setText("");
            this.textCode.setText("");
            this.tombolNew.setEnabled(true);
            this.tombolSave.setEnabled(false);
            this.tombolCancel.setEnabled(false);
            this.tombolAdd.setEnabled(false);
            this.tombolRemove.setEnabled(false);
            this.textJumlah.setEnabled(false);
            this.comboBrg.setEnabled(false);
            this.modelTbl.setRowCount(0);
            this.daftarBrg.clear();
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tombolSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Barang> comboBrg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelData;
    private javax.swing.JTextField textCode;
    private javax.swing.JTextField textJumlah;
    private javax.swing.JButton tombolAdd;
    private javax.swing.JButton tombolCancel;
    private javax.swing.JButton tombolNew;
    private javax.swing.JButton tombolRemove;
    private javax.swing.JButton tombolSave;
    // End of variables declaration//GEN-END:variables
}
